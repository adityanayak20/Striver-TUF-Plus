Containers: pair, vector, stack, queue, set, map
Algorithms : sort(), next_permutation(), max_element(), reverse(), pow()
Functions: Comparator()
Iterators: begin(), end(), rbegin(), rend()

1. Pair
    - creation, initialization & printing
    - make_pair
    - copying pair from another pair
    - pair comparison
    - swapping

2. Vector
    - creation, initialization & printing
    - push_back() / emplace_back()
    - pop_back()
    - front()
    - back()
    - auto iterator
    - size()
    - empty()
    - capacity()
    - swapping

3. Stack
    - push() / emplace()
    - pop()
    - top()
    - empty()
    - size()
    - swapping

4. Queue
    - push() / emplace()
    - pop()
    - front()
    - empty()
    - size()
    - swapping

5. Priority Queue
    - push() / emplace()
    - pop()
    - top()
    - empty()
    - size()

6. Set / Unordered Set
    - insert() / emplace()
    - find()
    - count()
    - erase()   // delete all occurrences
    - lower_bound() / upper_bound  {It doesn't work on Unordered Set} 

7. MultiSet / Unordered MultiSet // Allow multiple elements
    - insert() / emplace()
    - find()
    - count()
    - erase()   // delete all occurrences
    - lower_bound() / upper_bound {It doesn't work on Unordered MultiSet}

8. Map / Unordered Map
    - insert() / emplace()
    - size()
    - find()
    - empty()
    - lower_bound() / upper_bound  {It doesn't work on Unordered Map} 

9. MultiMap / Unordered MultiMap // Allow multiple elements with same keys
    - insert() / emplace()
    - size()
    - find()
    - empty()
    - lower_bound() / upper_bound {It doesn't work on Unordered MultiMap}



NOTE: In both Set & Map, unordered version has better time complexity 


    