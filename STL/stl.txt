Containers: pair, vector, stack, queue, set, map
Algorithms : sort(), next_permutation(), max_element(), reverse(), pow()
Functions: Comparator()
Iterators: begin(), end(), rbegin(), rend()

1. Pair
    - creation, initialization & printing
    - make_pair
    - copying pair from another pair
    - pair comparison
    - swapping

2. Vector {O(1) - access, add, delete from back}
    - creation, initialization & printing
    - push_back() / emplace_back() // O(1)
    - pop_back() // O(1)
    - back() // // O(1)
    - auto iterator
    - size()
    - empty()
    - capacity()
    - swapping

3. List {O(1) - access, add, delete from front}
    - creation, initialization & printing
    - push_front() / emplace_front // O(1)
    - front() // O(1)
    - pop_front() // O(1)
    - auto iterator
    - size()
    - empty()
    - capacity()
    - swapping

4. Deque {O(1) - access, add, delete from front & back}
    - creation, initialization & printing
    - push_back() / emplace_back() // O(1)
    - push_front() / emplace_front() // O(1)
    - back() // O(1)
    - front() // O(1)
    - pop_front() // O(1)
    - pop_back() // O(1)
    - auto iterator
    - size()
    - empty()
    - capacity()
    - swapping

5. Stack
    - push() / emplace()
    - pop()
    - top()
    - empty()
    - size()
    - swapping

6. Queue
    - push() / emplace()
    - pop()
    - front()
    - empty()
    - size()
    - swapping

7. Priority Queue
    - push() / emplace()
    - pop()
    - top()
    - empty()
    - size()

8. Set / Unordered Set
    - insert() / emplace()
    - find()
    - count()
    - erase()   // delete all occurrences
    - lower_bound() / upper_bound  {It doesn't work on Unordered Set} 

9. MultiSet / Unordered MultiSet // Allow multiple elements
    - insert() / emplace()
    - find()
    - count()
    - erase()   // delete all occurrences
    - lower_bound() / upper_bound {It doesn't work on Unordered MultiSet}
    - equal_range()

10. Map / Unordered Map
    - insert() / emplace()
    - size()
    - find()
    - empty()
    - lower_bound() / upper_bound  {It doesn't work on Unordered Map} 

11. MultiMap / Unordered MultiMap // Allow multiple elements with same keys
    - insert() / emplace()
    - size()
    - find()
    - empty()
    - lower_bound() / upper_bound {It doesn't work on Unordered MultiMap}
    - equal_range()

12. Algorithms
    - accumulate()
    - Custom Comparator
    - count()
    - find()
    - max_element()
    - next_permutation()
    - power()
    - reverse()
    - sort()



NOTE: In both Set & Map, unordered version has better time complexity     